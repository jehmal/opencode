{
  "openapi": "3.0.0",
  "info": {
    "title": "dgmo",
    "description": "dgmo api",
    "version": "1.0.0"
  },
  "paths": {
    "/event": {
      "get": {
        "responses": {
          "200": {
            "description": "Event stream",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        },
        "operationId": "getEvent",
        "parameters": [],
        "description": "Get events"
      }
    },
    "/app": {
      "get": {
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              }
            }
          }
        },
        "operationId": "getApp",
        "parameters": [],
        "description": "Get app info"
      }
    },
    "/app/init": {
      "post": {
        "responses": {
          "200": {
            "description": "Initialize the app",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "operationId": "postAppInit",
        "parameters": [],
        "description": "Initialize the app"
      }
    },
    "/config": {
      "get": {
        "responses": {
          "200": {
            "description": "Get config info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config"
                }
              }
            }
          }
        },
        "operationId": "getConfig",
        "parameters": [],
        "description": "Get config info"
      }
    },
    "/session": {
      "get": {
        "responses": {
          "200": {
            "description": "List of sessions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Session"
                  }
                }
              }
            }
          }
        },
        "operationId": "getSession",
        "parameters": [],
        "description": "List all sessions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successfully created session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "postSession",
        "parameters": [],
        "description": "Create a new session"
      }
    },
    "/session/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successfully deleted session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "operationId": "deleteSessionById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Delete a session and all its data"
      }
    },
    "/session/{id}/init": {
      "post": {
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "operationId": "postSessionByIdInit",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Session ID"
            },
            "required": true
          }
        ],
        "description": "Analyze the app and create an AGENTS.md file",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "providerID": {
                    "type": "string"
                  },
                  "modelID": {
                    "type": "string"
                  }
                },
                "required": [
                  "providerID",
                  "modelID"
                ]
              }
            }
          }
        }
      }
    },
    "/session/{id}/abort": {
      "post": {
        "responses": {
          "200": {
            "description": "Aborted session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "operationId": "postSessionByIdAbort",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Abort a session"
      }
    },
    "/session/{id}/share": {
      "post": {
        "responses": {
          "200": {
            "description": "Successfully shared session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        },
        "operationId": "postSessionByIdShare",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Share a session"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successfully unshared session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        },
        "operationId": "deleteSessionByIdShare",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Unshare the session"
      }
    },
    "/session/{id}/summarize": {
      "post": {
        "responses": {
          "200": {
            "description": "Summarized session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "operationId": "postSessionByIdSummarize",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Session ID"
            },
            "required": true
          }
        ],
        "description": "Summarize the session",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "providerID": {
                    "type": "string"
                  },
                  "modelID": {
                    "type": "string"
                  }
                },
                "required": [
                  "providerID",
                  "modelID"
                ]
              }
            }
          }
        }
      }
    },
    "/session/{id}/message": {
      "get": {
        "responses": {
          "200": {
            "description": "List of messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        },
        "operationId": "getSessionByIdMessage",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Session ID"
            },
            "required": true
          }
        ],
        "description": "List messages for a session"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Created message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          }
        },
        "operationId": "postSessionByIdMessage",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Session ID"
            },
            "required": true
          }
        ],
        "description": "Create and send a new message to a session",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "providerID": {
                    "type": "string"
                  },
                  "modelID": {
                    "type": "string"
                  },
                  "parts": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/MessagePart"
                    }
                  }
                },
                "required": [
                  "providerID",
                  "modelID",
                  "parts"
                ]
              }
            }
          }
        }
      }
    },
    "/session/{id}/sub-sessions": {
      "get": {
        "responses": {
          "200": {
            "description": "List of sub-sessions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "^ses"
                      },
                      "parentSessionId": {
                        "type": "string"
                      },
                      "agentName": {
                        "type": "string"
                      },
                      "taskDescription": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "running",
                          "completed",
                          "failed"
                        ]
                      },
                      "createdAt": {
                        "type": "number"
                      },
                      "completedAt": {
                        "type": "number"
                      },
                      "summary": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "parentSessionId",
                      "agentName",
                      "taskDescription",
                      "status",
                      "createdAt"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "getSessionByIdSub-sessions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Parent Session ID"
            },
            "required": true
          }
        ],
        "description": "Get all sub-sessions for a parent session"
      }
    },
    "/sub-sessions": {
      "get": {
        "responses": {
          "200": {
            "description": "List of all sub-sessions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "^ses"
                      },
                      "parentSessionId": {
                        "type": "string"
                      },
                      "agentName": {
                        "type": "string"
                      },
                      "taskDescription": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "running",
                          "completed",
                          "failed"
                        ]
                      },
                      "createdAt": {
                        "type": "number"
                      },
                      "completedAt": {
                        "type": "number"
                      },
                      "summary": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "parentSessionId",
                      "agentName",
                      "taskDescription",
                      "status",
                      "createdAt"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "getSub-sessions",
        "parameters": [],
        "description": "List all sub-sessions across all parent sessions"
      }
    },
    "/sub-sessions/search": {
      "get": {
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "pattern": "^ses"
                      },
                      "parentSessionId": {
                        "type": "string"
                      },
                      "agentName": {
                        "type": "string"
                      },
                      "taskDescription": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "running",
                          "completed",
                          "failed"
                        ]
                      },
                      "createdAt": {
                        "type": "number"
                      },
                      "completedAt": {
                        "type": "number"
                      },
                      "summary": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "parentSessionId",
                      "agentName",
                      "taskDescription",
                      "status",
                      "createdAt"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "getSub-sessionsSearch",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string",
              "description": "Search query"
            },
            "required": true
          }
        ],
        "description": "Search sub-sessions by query"
      }
    },
    "/sub-session/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Sub-session details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "pattern": "^ses"
                    },
                    "parentSessionId": {
                      "type": "string"
                    },
                    "agentName": {
                      "type": "string"
                    },
                    "taskDescription": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "completed",
                        "failed"
                      ]
                    },
                    "createdAt": {
                      "type": "number"
                    },
                    "completedAt": {
                      "type": "number"
                    },
                    "summary": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "parentSessionId",
                    "agentName",
                    "taskDescription",
                    "status",
                    "createdAt"
                  ]
                }
              }
            }
          }
        },
        "operationId": "getSub-sessionById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Sub-session ID"
            },
            "required": true
          }
        ],
        "description": "Get a specific sub-session"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successfully deleted sub-session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "operationId": "deleteSub-sessionById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "description": "Sub-session ID"
            },
            "required": true
          }
        ],
        "description": "Delete a sub-session"
      }
    },
    "/config/providers": {
      "get": {
        "responses": {
          "200": {
            "description": "List of providers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "providers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Provider"
                      }
                    },
                    "default": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "providers",
                    "default"
                  ]
                }
              }
            }
          }
        },
        "operationId": "getConfigProviders",
        "parameters": [],
        "description": "List all providers"
      }
    },
    "/file": {
      "get": {
        "responses": {
          "200": {
            "description": "Search for files",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "operationId": "getFile",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Search for files"
      }
    }
  },
  "components": {
    "schemas": {
      "Event": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/Event.storage.write"
          },
          {
            "$ref": "#/components/schemas/Event.installation.updated"
          },
          {
            "$ref": "#/components/schemas/Event.lsp.client.diagnostics"
          },
          {
            "$ref": "#/components/schemas/Event.permission.updated"
          },
          {
            "$ref": "#/components/schemas/Event.file.edited"
          },
          {
            "$ref": "#/components/schemas/Event.message.updated"
          },
          {
            "$ref": "#/components/schemas/Event.message.part.updated"
          },
          {
            "$ref": "#/components/schemas/Event.session.updated"
          },
          {
            "$ref": "#/components/schemas/Event.session.deleted"
          },
          {
            "$ref": "#/components/schemas/Event.session.idle"
          },
          {
            "$ref": "#/components/schemas/Event.session.error"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "storage.write": "#/components/schemas/Event.storage.write",
            "installation.updated": "#/components/schemas/Event.installation.updated",
            "lsp.client.diagnostics": "#/components/schemas/Event.lsp.client.diagnostics",
            "permission.updated": "#/components/schemas/Event.permission.updated",
            "file.edited": "#/components/schemas/Event.file.edited",
            "message.updated": "#/components/schemas/Event.message.updated",
            "message.part.updated": "#/components/schemas/Event.message.part.updated",
            "session.updated": "#/components/schemas/Event.session.updated",
            "session.deleted": "#/components/schemas/Event.session.deleted",
            "session.idle": "#/components/schemas/Event.session.idle",
            "session.error": "#/components/schemas/Event.session.error"
          }
        }
      },
      "Event.storage.write": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "storage.write"
          },
          "properties": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "content": {}
            },
            "required": [
              "key"
            ]
          }
        },
        "required": [
          "type",
          "properties"
        ]
      },
      "Event.installation.updated": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "installation.updated"
          },
          "properties": {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              }
            },
            "required": [
              "version"
            ]
          }
        },
        "required": [
          "type",
          "properties"
        ]
      },
      "Event.lsp.client.diagnostics": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "lsp.client.diagnostics"
          },
          "properties": {
            "type": "object",
            "properties": {
              "serverID": {
                "type": "string"
              },
              "path": {
                "type": "string"
              }
            },
            "required": [
              "serverID",
              "path"
            ]
          }
        },
        "required": [
          "type",
          "properties"
        ]
      },
      "Event.permission.updated": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "permission.updated"
          },
          "properties": {
            "$ref": "#/components/schemas/permission.info"
          }
        },
        "required": [
          "type",
          "properties"
        ]
      },
      "permission.info": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sessionID": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {}
          },
          "time": {
            "type": "object",
            "properties": {
              "created": {
                "type": "number"
              }
            },
            "required": [
              "created"
            ]
          }
        },
        "required": [
          "id",
          "sessionID",
          "title",
          "metadata",
          "time"
        ]
      },
      "Event.file.edited": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "file.edited"
          },
          "properties": {
            "type": "object",
            "properties": {
              "file": {
                "type": "string"
              }
            },
            "required": [
              "file"
            ]
          }
        },
        "required": [
          "type",
          "properties"
        ]
      },
      "Event.message.updated": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "message.updated"
          },
          "properties": {
            "type": "object",
            "properties": {
              "info": {
                "$ref": "#/components/schemas/Message"
              }
            },
            "required": [
              "info"
            ]
          }
        },
        "required": [
          "type",
          "properties"
        ]
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "assistant"
            ]
          },
          "parts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessagePart"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/MessageMetadata"
          }
        },
        "required": [
          "id",
          "role",
          "parts",
          "metadata"
        ]
      },
      "MessagePart": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/TextPart"
          },
          {
            "$ref": "#/components/schemas/ReasoningPart"
          },
          {
            "$ref": "#/components/schemas/ToolInvocationPart"
          },
          {
            "$ref": "#/components/schemas/SourceUrlPart"
          },
          {
            "$ref": "#/components/schemas/FilePart"
          },
          {
            "$ref": "#/components/schemas/StepStartPart"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "text": "#/components/schemas/TextPart",
            "reasoning": "#/components/schemas/ReasoningPart",
            "tool-invocation": "#/components/schemas/ToolInvocationPart",
            "source-url": "#/components/schemas/SourceUrlPart",
            "file": "#/components/schemas/FilePart",
            "step-start": "#/components/schemas/StepStartPart"
          }
        }
      },
      "TextPart": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "text"
          },
          "text": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "text"
        ]
      },
      "ReasoningPart": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "reasoning"
          },
          "text": {
            "type": "string"
          },
          "providerMetadata": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "type",
          "text"
        ]
      },
      "ToolInvocationPart": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "tool-invocation"
          },
          "toolInvocation": {
            "$ref": "#/components/schemas/ToolInvocation"
          }
        },
        "required": [
          "type",
          "toolInvocation"
        ]
      },
      "ToolInvocation": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ToolCall"
          },
          {
            "$ref": "#/components/schemas/ToolPartialCall"
          },
          {
            "$ref": "#/components/schemas/ToolResult"
          }
        ],
        "discriminator": {
          "propertyName": "state",
          "mapping": {
            "call": "#/components/schemas/ToolCall",
            "partial-call": "#/components/schemas/ToolPartialCall",
            "result": "#/components/schemas/ToolResult"
          }
        }
      },
      "ToolCall": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "const": "call"
          },
          "step": {
            "type": "number"
          },
          "toolCallId": {
            "type": "string"
          },
          "toolName": {
            "type": "string"
          },
          "args": {}
        },
        "required": [
          "state",
          "toolCallId",
          "toolName"
        ]
      },
      "ToolPartialCall": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "const": "partial-call"
          },
          "step": {
            "type": "number"
          },
          "toolCallId": {
            "type": "string"
          },
          "toolName": {
            "type": "string"
          },
          "args": {}
        },
        "required": [
          "state",
          "toolCallId",
          "toolName"
        ]
      },
      "ToolResult": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "const": "result"
          },
          "step": {
            "type": "number"
          },
          "toolCallId": {
            "type": "string"
          },
          "toolName": {
            "type": "string"
          },
          "args": {},
          "result": {
            "type": "string"
          }
        },
        "required": [
          "state",
          "toolCallId",
          "toolName",
          "result"
        ]
      },
      "SourceUrlPart": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "source-url"
          },
          "sourceId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "providerMetadata": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "type",
          "sourceId",
          "url"
        ]
      },
      "FilePart": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "file"
          },
          "mediaType": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "mediaType",
          "url"
        ]
      },
      "StepStartPart": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "step-start"
          }
        },
        "required": [
          "type"
        ]
      },
      "MessageMetadata": {
        "type": "object",
        "properties": {
          "time": {
            "type": "object",
            "properties": {
              "created": {
                "type": "number"
              },
              "completed": {
                "type": "number"
              }
            },
            "required": [
              "created"
            ]
          },
          "error": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/ProviderAuthError"
              },
              {
                "$ref": "#/components/schemas/UnknownError"
              },
              {
                "$ref": "#/components/schemas/MessageOutputLengthError"
              }
            ],
            "discriminator": {
              "propertyName": "name",
              "mapping": {
                "ProviderAuthError": "#/components/schemas/ProviderAuthError",
                "UnknownError": "#/components/schemas/UnknownError",
                "MessageOutputLengthError": "#/components/schemas/MessageOutputLengthError"
              }
            }
          },
          "sessionID": {
            "type": "string"
          },
          "tool": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "time": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "number"
                    },
                    "end": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "start",
                    "end"
                  ]
                }
              },
              "required": [
                "title",
                "time"
              ],
              "additionalProperties": {}
            }
          },
          "assistant": {
            "type": "object",
            "properties": {
              "system": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "modelID": {
                "type": "string"
              },
              "providerID": {
                "type": "string"
              },
              "path": {
                "type": "object",
                "properties": {
                  "cwd": {
                    "type": "string"
                  },
                  "root": {
                    "type": "string"
                  }
                },
                "required": [
                  "cwd",
                  "root"
                ]
              },
              "cost": {
                "type": "number"
              },
              "summary": {
                "type": "boolean"
              },
              "tokens": {
                "type": "object",
                "properties": {
                  "input": {
                    "type": "number"
                  },
                  "output": {
                    "type": "number"
                  },
                  "reasoning": {
                    "type": "number"
                  },
                  "cache": {
                    "type": "object",
                    "properties": {
                      "read": {
                        "type": "number"
                      },
                      "write": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "read",
                      "write"
                    ]
                  }
                },
                "required": [
                  "input",
                  "output",
                  "reasoning",
                  "cache"
                ]
              }
            },
            "required": [
              "system",
              "modelID",
              "providerID",
              "path",
              "cost",
              "tokens"
            ]
          }
        },
        "required": [
          "time",
          "sessionID",
          "tool"
        ]
      },
      "ProviderAuthError": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "const": "ProviderAuthError"
          },
          "data": {
            "type": "object",
            "properties": {
              "providerID": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "required": [
              "providerID",
              "message"
            ]
          }
        },
        "required": [
          "name",
          "data"
        ]
      },
      "UnknownError": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "const": "UnknownError"
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            },
            "required": [
              "message"
            ]
          }
        },
        "required": [
          "name",
          "data"
        ]
      },
      "MessageOutputLengthError": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "const": "MessageOutputLengthError"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "name",
          "data"
        ]
      },
      "Event.message.part.updated": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "message.part.updated"
          },
          "properties": {
            "type": "object",
            "properties": {
              "part": {
                "$ref": "#/components/schemas/MessagePart"
              },
              "sessionID": {
                "type": "string"
              },
              "messageID": {
                "type": "string"
              }
            },
            "required": [
              "part",
              "sessionID",
              "messageID"
            ]
          }
        },
        "required": [
          "type",
          "properties"
        ]
      },
      "Event.session.updated": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "session.updated"
          },
          "properties": {
            "type": "object",
            "properties": {
              "info": {
                "$ref": "#/components/schemas/Session"
              }
            },
            "required": [
              "info"
            ]
          }
        },
        "required": [
          "type",
          "properties"
        ]
      },
      "Session": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "pattern": "^ses"
          },
          "parentID": {
            "type": "string",
            "pattern": "^ses"
          },
          "share": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              }
            },
            "required": [
              "url"
            ]
          },
          "title": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "time": {
            "type": "object",
            "properties": {
              "created": {
                "type": "number"
              },
              "updated": {
                "type": "number"
              }
            },
            "required": [
              "created",
              "updated"
            ]
          }
        },
        "required": [
          "id",
          "title",
          "version",
          "time"
        ]
      },
      "Event.session.deleted": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "session.deleted"
          },
          "properties": {
            "type": "object",
            "properties": {
              "info": {
                "$ref": "#/components/schemas/Session"
              }
            },
            "required": [
              "info"
            ]
          }
        },
        "required": [
          "type",
          "properties"
        ]
      },
      "Event.session.idle": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "session.idle"
          },
          "properties": {
            "type": "object",
            "properties": {
              "sessionID": {
                "type": "string"
              }
            },
            "required": [
              "sessionID"
            ]
          }
        },
        "required": [
          "type",
          "properties"
        ]
      },
      "Event.session.error": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "session.error"
          },
          "properties": {
            "type": "object",
            "properties": {
              "error": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ProviderAuthError"
                  },
                  {
                    "$ref": "#/components/schemas/UnknownError"
                  },
                  {
                    "$ref": "#/components/schemas/MessageOutputLengthError"
                  }
                ],
                "discriminator": {
                  "propertyName": "name",
                  "mapping": {
                    "ProviderAuthError": "#/components/schemas/ProviderAuthError",
                    "UnknownError": "#/components/schemas/UnknownError",
                    "MessageOutputLengthError": "#/components/schemas/MessageOutputLengthError"
                  }
                }
              }
            }
          }
        },
        "required": [
          "type",
          "properties"
        ]
      },
      "App": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "hostname": {
            "type": "string"
          },
          "git": {
            "type": "boolean"
          },
          "path": {
            "type": "object",
            "properties": {
              "config": {
                "type": "string"
              },
              "data": {
                "type": "string"
              },
              "root": {
                "type": "string"
              },
              "cwd": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            },
            "required": [
              "config",
              "data",
              "root",
              "cwd",
              "state"
            ]
          },
          "time": {
            "type": "object",
            "properties": {
              "initialized": {
                "type": "number"
              }
            }
          }
        },
        "required": [
          "user",
          "hostname",
          "git",
          "path",
          "time"
        ]
      },
      "Config": {
        "type": "object",
        "properties": {
          "$schema": {
            "type": "string",
            "description": "JSON schema reference for configuration validation"
          },
          "theme": {
            "type": "string",
            "description": "Theme name to use for the interface"
          },
          "keybinds": {
            "$ref": "#/components/schemas/KeybindsConfig",
            "description": "Custom keybind configurations"
          },
          "autoshare": {
            "type": "boolean",
            "description": "Share newly created sessions automatically"
          },
          "autoupdate": {
            "type": "boolean",
            "description": "Automatically update to the latest version"
          },
          "disabled_providers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Disable providers that are loaded automatically"
          },
          "model": {
            "type": "string",
            "description": "Model to use in the format of provider/model, eg anthropic/claude-2"
          },
          "provider": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {
                "api": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "env": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "type": "string"
                },
                "npm": {
                  "type": "string"
                },
                "models": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "release_date": {
                        "type": "string"
                      },
                      "attachment": {
                        "type": "boolean"
                      },
                      "reasoning": {
                        "type": "boolean"
                      },
                      "temperature": {
                        "type": "boolean"
                      },
                      "tool_call": {
                        "type": "boolean"
                      },
                      "cost": {
                        "type": "object",
                        "properties": {
                          "input": {
                            "type": "number"
                          },
                          "output": {
                            "type": "number"
                          },
                          "cache_read": {
                            "type": "number"
                          },
                          "cache_write": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "input",
                          "output"
                        ]
                      },
                      "limit": {
                        "type": "object",
                        "properties": {
                          "context": {
                            "type": "number"
                          },
                          "output": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "context",
                          "output"
                        ]
                      },
                      "options": {
                        "type": "object",
                        "additionalProperties": {}
                      }
                    }
                  }
                },
                "options": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "required": [
                "models"
              ]
            },
            "description": "Custom provider configurations and model overrides"
          },
          "mcp": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/McpLocalConfig"
                },
                {
                  "$ref": "#/components/schemas/McpRemoteConfig"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "local": "#/components/schemas/McpLocalConfig",
                  "remote": "#/components/schemas/McpRemoteConfig"
                }
              }
            },
            "description": "MCP (Model Context Protocol) server configurations"
          },
          "experimental": {
            "type": "object",
            "properties": {
              "hook": {
                "type": "object",
                "properties": {
                  "file_edited": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "environment": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "command"
                        ]
                      }
                    }
                  },
                  "session_completed": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "command": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "environment": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "command"
                      ]
                    }
                  }
                }
              }
            }
          },
          "performance": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "default": false,
                "description": "Enable performance tracking for tool execution"
              },
              "saveReports": {
                "type": "boolean",
                "default": true,
                "description": "Save performance reports to storage"
              },
              "maxMetrics": {
                "type": "number",
                "default": 1000,
                "description": "Maximum number of metrics to keep in memory"
              }
            },
            "required": [
              "enabled",
              "saveReports",
              "maxMetrics"
            ],
            "description": "Performance tracking configuration"
          },
          "agentMode": {
            "type": "string",
            "enum": [
              "read-only",
              "all-tools"
            ],
            "default": "read-only",
            "description": "Default mode for sub-agents (read-only or all-tools)"
          }
        },
        "required": [
          "agentMode"
        ],
        "additionalProperties": false
      },
      "KeybindsConfig": {
        "type": "object",
        "properties": {
          "leader": {
            "type": "string",
            "description": "Leader key for keybind combinations"
          },
          "help": {
            "type": "string",
            "description": "Show help dialog"
          },
          "editor_open": {
            "type": "string",
            "description": "Open external editor"
          },
          "session_new": {
            "type": "string",
            "description": "Create a new session"
          },
          "session_list": {
            "type": "string",
            "description": "List all sessions"
          },
          "session_share": {
            "type": "string",
            "description": "Share current session"
          },
          "session_interrupt": {
            "type": "string",
            "description": "Interrupt current session"
          },
          "session_compact": {
            "type": "string",
            "description": "Toggle compact mode for session"
          },
          "tool_details": {
            "type": "string",
            "description": "Show tool details"
          },
          "model_list": {
            "type": "string",
            "description": "List available models"
          },
          "theme_list": {
            "type": "string",
            "description": "List available themes"
          },
          "project_init": {
            "type": "string",
            "description": "Initialize project configuration"
          },
          "input_clear": {
            "type": "string",
            "description": "Clear input field"
          },
          "input_paste": {
            "type": "string",
            "description": "Paste from clipboard"
          },
          "input_submit": {
            "type": "string",
            "description": "Submit input"
          },
          "input_newline": {
            "type": "string",
            "description": "Insert newline in input"
          },
          "history_previous": {
            "type": "string",
            "description": "Navigate to previous history item"
          },
          "history_next": {
            "type": "string",
            "description": "Navigate to next history item"
          },
          "messages_page_up": {
            "type": "string",
            "description": "Scroll messages up by one page"
          },
          "messages_page_down": {
            "type": "string",
            "description": "Scroll messages down by one page"
          },
          "messages_half_page_up": {
            "type": "string",
            "description": "Scroll messages up by half page"
          },
          "messages_half_page_down": {
            "type": "string",
            "description": "Scroll messages down by half page"
          },
          "messages_previous": {
            "type": "string",
            "description": "Navigate to previous message"
          },
          "messages_next": {
            "type": "string",
            "description": "Navigate to next message"
          },
          "messages_first": {
            "type": "string",
            "description": "Navigate to first message"
          },
          "messages_last": {
            "type": "string",
            "description": "Navigate to last message"
          },
          "app_exit": {
            "type": "string",
            "description": "Exit the application"
          }
        },
        "additionalProperties": false
      },
      "Provider": {
        "type": "object",
        "properties": {
          "api": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "env": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "npm": {
            "type": "string"
          },
          "models": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Model"
            }
          }
        },
        "required": [
          "name",
          "env",
          "id",
          "models"
        ]
      },
      "Model": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "release_date": {
            "type": "string"
          },
          "attachment": {
            "type": "boolean"
          },
          "reasoning": {
            "type": "boolean"
          },
          "temperature": {
            "type": "boolean"
          },
          "tool_call": {
            "type": "boolean"
          },
          "cost": {
            "type": "object",
            "properties": {
              "input": {
                "type": "number"
              },
              "output": {
                "type": "number"
              },
              "cache_read": {
                "type": "number"
              },
              "cache_write": {
                "type": "number"
              }
            },
            "required": [
              "input",
              "output"
            ]
          },
          "limit": {
            "type": "object",
            "properties": {
              "context": {
                "type": "number"
              },
              "output": {
                "type": "number"
              }
            },
            "required": [
              "context",
              "output"
            ]
          },
          "options": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "id",
          "name",
          "release_date",
          "attachment",
          "reasoning",
          "temperature",
          "tool_call",
          "cost",
          "limit",
          "options"
        ]
      },
      "McpLocalConfig": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "local",
            "description": "Type of MCP server connection"
          },
          "command": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Command and arguments to run the MCP server"
          },
          "environment": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Environment variables to set when running the MCP server"
          },
          "enabled": {
            "type": "boolean",
            "description": "Enable or disable the MCP server on startup"
          }
        },
        "required": [
          "type",
          "command"
        ],
        "additionalProperties": false
      },
      "McpRemoteConfig": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "remote",
            "description": "Type of MCP server connection"
          },
          "url": {
            "type": "string",
            "description": "URL of the remote MCP server"
          },
          "enabled": {
            "type": "boolean",
            "description": "Enable or disable the MCP server on startup"
          }
        },
        "required": [
          "type",
          "url"
        ],
        "additionalProperties": false
      },
      "Error": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "data"
        ]
      }
    }
  }
}