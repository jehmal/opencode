{
  // Configuration with security settings and authentication
  "mcpServers": {
    "secure-filesystem": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-filesystem", "/secure/path"],
      "env": {
        "NODE_ENV": "production",
        "SECURITY_LEVEL": "high",
        "ALLOWED_PATHS": "/secure/path,/public/readonly",
        "DENIED_PATHS": "/etc,/root,/home",
        "MAX_FILE_SIZE": "10485760",
        "ENABLE_AUDIT_LOG": "true"
      },
      "security": {
        "sandboxed": true,
        "readOnly": false,
        "allowedOperations": ["read", "write", "list"],
        "deniedOperations": ["delete", "execute"]
      }
    },
    "authenticated-api": {
      "url": "https://secure-api.example.com/mcp",
      "transport": "websocket",
      "protocols": ["mcp-v1"],
      "headers": {
        "Authorization": "Bearer ${MCP_API_TOKEN}",
        "X-API-Key": "${MCP_API_KEY}",
        "X-Client-Cert": "${CLIENT_CERT_PATH}"
      },
      "security": {
        "tlsVerify": true,
        "allowSelfSigned": false,
        "clientCert": "${CLIENT_CERT_PATH}",
        "clientKey": "${CLIENT_KEY_PATH}",
        "caCert": "${CA_CERT_PATH}"
      },
      "rateLimit": {
        "requestsPerMinute": 100,
        "burstLimit": 10
      }
    },
    "oauth-protected": {
      "command": "node",
      "args": ["./servers/oauth-server.js"],
      "env": {
        "OAUTH_CLIENT_ID": "${OAUTH_CLIENT_ID}",
        "OAUTH_CLIENT_SECRET": "${OAUTH_CLIENT_SECRET}",
        "OAUTH_SCOPE": "mcp:read mcp:write",
        "TOKEN_REFRESH_THRESHOLD": "300"
      },
      "security": {
        "authType": "oauth2",
        "tokenEndpoint": "https://auth.example.com/oauth/token",
        "refreshToken": "${OAUTH_REFRESH_TOKEN}"
      }
    }
  },
  "security": {
    "globalSettings": {
      "enforceHttps": true,
      "validateCertificates": true,
      "maxConcurrentConnections": 10,
      "connectionTimeout": 30000,
      "enableAuditLogging": true,
      "auditLogPath": "/var/log/mcp-audit.log"
    }
  }
}
